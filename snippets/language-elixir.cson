'.source.elixir':
  'callback':
    'prefix': 'callback'
    'body': '@callback ${1:function_name}($2) :: ${3:type}'
  'case':
    'prefix': 'case'
    'body': 'case $1 do\n\t$0\nend'
  'cond':
    'prefix': 'cond'
    'body': 'cond do\n\t$0\nend'
  'def':
    'prefix': 'def'
    'body': 'def ${1:function_name} do\n\t$0\nend'
  'defp':
    'prefix': 'defp'
    'body': 'defp ${1:function_name} do\n\t$0\nend'
   'defguard':
    'prefix': 'defguard'
    'body': 'defguard ${1:guard_name}($2) when $3'
  'defguardp':
    'prefix': 'defguardp'
    'body': 'defguardp ${1:guard_name}($2) when $3'
  'defmacro':
    'prefix': 'defmacro'
    'body': 'defmacro ${1:macro_name} do\n\t$0\nend'
  'defmacrop':
    'prefix': 'defmacrop'
    'body': 'defmacrop ${1:macro_name} do\n\t$0\nend'
  'defmodule':
    'prefix': 'defmodule'
    'body': 'defmodule $1 do\n\t$0\nend'
  'defstruct':
    'prefix': 'defstruct'
    'body': 'defstruct [$1]'
  'doc':
    'prefix': 'doc'
    'body': '@doc """\n$0\n"""'
  'do':
    'prefix': 'do'
    'body': 'do\n\t$0\nend'
  'for':
    'prefix': 'for'
    'body': 'for $1 <- $2 do\n\t$3\nend'
  'if':
    'prefix': 'if'
    'body': 'if $1 do\n\t$0\nend'
  'if/else':
    'prefix': 'ife'
    'body': 'if $1 do\n\t$2\nelse\n\t$3\nend'
  'inline def':
    'prefix': 'idef'
    'body': 'def $1, do: $2'
  'inline defp':
    'prefix': 'idefp'
    'body': 'defp $1, do: $2'
  'moduledoc':
    'prefix': 'moduledoc'
    'body': '@moduledoc """\n$0\n"""'
  'moduletag':
    'prefix': 'moduletag'
    'body': '@moduletag ${1::${2:your_tag}}'
  'tag':
    'prefix': 'tag'
    'body': '@tag ${1::${2:your_tag}}'
  'defprotocol':
    'prefix': 'defpro'
    'body': 'defprotocol $1 do\n\t$0\nend'
  'defimpl':
    'prefix': 'defi'
    'body': 'defimpl ${1:protocol}, for: ${2:type} do\n\t$0\nend'
  'defoverridable':
    'prefix': 'defover'
    'body': 'defoverridable [${1:function_name}: ${2:arity}]'
  'IEx.pry':
    'prefix': 'pry'
    'body': 'require IEx\nIEx.pry($0)'
  'IO.inspect':
    'prefix': 'ii'
    'body': 'IO.inspect($0)'
  'IO.puts':
    'prefix': 'ip'
    'body': 'IO.puts($0)'
  'Logger.debug':
    'prefix': 'deb'
    'body': 'Logger.debug "$0"'
  'Logger.debug inspect':
    'prefix': 'debi'
    'body': 'Logger.debug "\#{inspect $0}"'
  'spec':
    'prefix': 'spec'
    'body': '@spec ${1:function_name}($2) :: ${3:type}'

  'describe':
    'prefix': 'describe'
    'body': """
      describe "${1:tests}" do
        $2
      end
    """

  'setup':
    'prefix': 'setup'
    'body': """
      setup ${1:%{$2\\}} do
        $3
      end
    """

  'inline setup':
    'prefix': 'isetup'
    'body': 'setup [$1]'

  'test':
    'prefix': 'test'
    'body': 'test "$1" do\n\t$0\nend'
  'type':
    'prefix': 'type'
    'body': '@type ${1:type_name} :: ${2:type}'
  'typedoc':
    'prefix': 'typedoc'
    'body': '@typedoc """\n$0\n"""'
  'fn':
    'prefix': 'fn'
    'body': 'fn($1) -> ${2:...} end'
  'todo':
    'prefix': 'todo'
    'body': '# TODO: $0'
  'fixme':
    'prefix': 'fix'
    'body': '# FIXME: $0'
  'xxx':
    'prefix': 'xxx'
    'body': '# XXX: $0'
  'idea':
    'prefix': 'idea'
    'body': '# IDEA: $0'
  'hack':
    'prefix': 'hack'
    'body': '# HACK: $0'
  'note':
    'prefix': 'note'
    'body': '# NOTE: $0'
  'review':
    'prefix': 'review'
    'body': '# REVIEW: $0'
  'bug':
    'prefix': 'bug'
    'body': '# BUG: $0'
  'question':
    'prefix': 'question'
    'body': '# QUESTION: $0'
'.text.elixir':
  '<% inline %>':
    'prefix': '%'
    'body': '<% $0 %>'
  '<%= replace %>':
    'prefix': '%='
    'body': '<%= $0 %>'
  '<%% quotation %>':
    'prefix': '%%'
    'body': '<%% $0 %>'
  '<%# comment %>':
    'prefix': '%#'
    'body': '<%# $0 %>'
  'if':
    'prefix': 'if'
    'body': '<%= if ${1:true} do %>\n\t$0\n<% end %>'
  'if/else':
    'prefix': 'ife'
    'body': '<%= if ${1:true} do %>\n\t$2\n<% else %>\n\t$0\n<% end %>'
  'for':
    'prefix': 'for'
    'body': '<%= for ${1:el} <- ${2:list} do %>\n\t$0\n<% end %>'
  'todo':
    'prefix': 'todo'
    'body': '<%# TODO: $0 %>'
  'fixme':
    'prefix': 'fix'
    'body': '<%# FIXME: $0 %>'
  'xxx':
    'prefix': 'xxx'
    'body': '<%# XXX: $0 %>'
  'idea':
    'prefix': 'idea'
    'body': '<%# IDEA: $0 %>'
  'hack':
    'prefix': 'hack'
    'body': '<%# HACK: $0 %>'
  'note':
    'prefix': 'note'
    'body': '<%# NOTE: $0 %>'
  'review':
    'prefix': 'review'
    'body': '<%# REVIEW: $0 %>'
  'bug':
    'prefix': 'bug'
    'body': '<%# BUG: $0 %>'
  'question':
    'prefix': 'question'
    'body': '<%# QUESTION: $0 %>'
